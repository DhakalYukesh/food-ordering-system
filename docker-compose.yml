version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: food-ordering-db
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - food-ordering-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: food-ordering-rabbitmq
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-guest}
      # Enable management plugin explicitly
      RABBITMQ_PLUGINS: rabbitmq_management
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - food-ordering-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  food-ordering-network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data: